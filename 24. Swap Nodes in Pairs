/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {

    void solve(ListNode* prev, ListNode* curr, ListNode* next) {

        if(!curr)
            return;
            
        next = curr->next;

        if(!next)
            return;

        curr->next = next->next;
        next->next = curr;
        if(prev) prev->next = next;

        prev = curr;
        curr = curr->next;

        solve(prev, curr, next);

    }

public:
    ListNode* swapPairs(ListNode* head) {

        if(head == NULL or head->next == NULL)
            return head;

        ListNode* prev = NULL;
        ListNode* next = NULL;
        ListNode* curr = head;

        head = curr->next;

        solve(prev, curr, next);

        return head;
        
    }
};
